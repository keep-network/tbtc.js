# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js

on:
  # push:
  #   branches: [ 'releases/**' ]
  # pull_request:
  #   branches: [ master ]
  # workflow_dispatch:
  #   types: redeploy  #what did it do?
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  node-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.11.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-solidity-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Upgrade jq # needed?
        run: |
          wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
          chmod +x jq-linux64
          sudo mv jq-linux64 /usr/bin/jq

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  node-build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.11.x]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-solidity-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Upgrade jq # needed?
        run: |
          wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
          chmod +x jq-linux64
          sudo mv jq-linux64 /usr/bin/jq

      - name: Install dependencies
        run: npm ci

      - name: Build node
        run: npm run build --if-present

      - name: Run tests
        # env:
        #   CI: true # not needed?
        run: npm test

  node-publish:
    needs: [node-lint, node-build-and-test]
    if: | # remove the `rfc-18` condition once workflow is tested
      (github.ref == 'refs/heads/master'
        && github.event_name != 'pull_request')
        || startsWith(github.ref, 'refs/heads/rfc-18/')
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.11.x]
    steps:
      - uses: actions/checkout@v2
  
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-solidity-node-modules
        with:
          path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Upgrade jq  # needed?
        run: |
          wget https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64
          chmod +x jq-linux64
          sudo mv jq-linux64 /usr/bin/jq

      - name: Install dependencies
        run: npm ci

      - name: Resolve latest contracts
        run: |
          npm update \
            @keep-network/keep-ecdsa \
            @keep-network/tbtc

      # - name: Copy artifacts # needed?
      #   run: |
      #     mkdir -p artifacts
      #     cp -r build/contracts/* artifacts/

      - name: Bump up package version
        uses: keep-network/npm-version-bump@v1

      - name: Publish to npm # TODO: remove dry-run
        run: |
          echo //registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }} > .npmrc
          npm publish --access=public --dry-run